--Webhook
getgenv().Webhook = false
if getgenv().Webhook == true then
local webhookUrl = "https://discord.com/api/webhooks/1096095999212146809/3QRZ0hBfEl-eUNEdh_hsseu11R2Q-Gm9du_RSY1VGO7fstIQC_xxr9fo0HIMCg_yRscc"

local data = {
   ["content"] = "",
   ["embeds"] = {
       {
           ["title"] = "**Someone Executed Your Script!**",
           ["description"] = "Username: **" .. game.Players.LocalPlayer.Name.. "**\n" ..
                              "DisplayName: **".. tostring(game.Players.LocalPlayer.DisplayName).. "**\n" ..
                              "UserId: **".. tostring(game.Players.LocalPlayer.UserId).. "**\n" ..                                   
                               "Game Name: **" .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name.. "**\n" ..
                               "Game Id: **" .. game.PlaceId.. "**\n" ,
           ["type"] = "rich",
           ["color"] = tonumber(0x7269da),
           ["image"] = {
               ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                   tostring(game:GetService("Players").LocalPlayer.Name)
           }
       }
   }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local requestInfo = {Url = webhookUrl, Body = newdata, Method = "POST", Headers = headers}
request(requestInfo)
end






loadstring(game:HttpGet("https://raw.githubusercontent.com/zntly/highlight-esp/main/esp.lua"))()

local GarbageHub = loadstring(game:HttpGet(('https://raw.githubusercontent.com/technorav3nn/Osiris/main/source.lua')))()
--Windows
local Window = GarbageHub:MakeWindow({
Name = "Garbage Hub | Dumb Boss Fight", 
HidePremium = false, 
SaveConfig = false, 
ConfigFolder = "GarbageHubOrion"
})
--                                     /{Getgenv}/\
getgenv().SelectWeapon = false
getgenv().SetHitboxSize = false
getgenv().SetHitboxTrans = false
getgenv().HitboxExtender = false
getgenv().SetCooldown = false
getgenv().SetVotesClicks = false
getgenv().UnfairVote = false
getgenv().Henry = false
getgenv().SelectBodyPart = false
getgenv().Walkspeed = false
getgenv().NoSlowdown = false
getgenv().SetWalkspeed = false
getgenv().SelectPlayer = false
getgenv().viewPlayer = false
getgenv().Selectcamera = false
nowe = false

--                                     /{Variables}/\
local RunService = game:GetService("RunService")
speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
--                                      /{Tables}/
local WeaponsNameV2 = {}
for _, child in ipairs(game.Players.LocalPlayer.ItemOwned:GetDescendants()) do
    if child:IsA("BoolValue") then
        table.insert(WeaponsNameV2, child.Name)
    end
end


local Vote = {}
Vote[1] = "Add"
Vote[2] = "Remove"

local HenryLine = {
              "Protip: Use Shift lock while in combat. it will give you an easier time fighting",
              "Can't beat a boss? Bring your friends!",
              "Try not to die. You only have 1 life per round! (Or more on special occasions)",
              "Did you know? Harder bosses give better rewards. Some of them even give exclusive",
            }
            
local BodyPart = {}
BodyPart[1] = "HumanoidRootPart"

local cameraModes = {
    Classic = 1,
    Follow = 2,
    Track = 3,
    Watch = 4,
    LockFirstPerson = 5,
    Attach = 6,
    Orbital = 7,
    Scriptable = 8,
    Custom = 9,
    Boat = 10,
    Fixed = 11,
    Legacy = 12,
    MouseLockSwitch = 13,
    FirstPerson = 14,
    Vehicle = 15,
    FollowAttachment = 16,
    WatchAttachment = 17,
    ShoulderCamera = 18,
    Smooth = 19,
    Platform = 20,
    DevComputerCameraMovement = 21,
    AvatarEditorCamera = 22,
    ScriptableChatBubble = 23,
    ScriptableAnimation = 24,
    ScriptableFirstPerson = 25,
    EditMode = 26,
    GymCamera = 27,
    HeadLocked = 28,
    BodyLocked = 29,
    BoxLock = 30,
    Behind = 31,
    Front = 32,
    Left = 33,
    Right = 34,
    Top = 35,
    Bottom = 36,
    ScriptableMouseLock = 37,
    FixedAttach = 38,
    FixedScriptable = 39,
    KeyboardMovement = 40,
    MouseDragRotate = 41,
    MouseDragZoom = 42,
    CustomFirstPerson = 43,
    CustomScriptable = 44,
    CustomFixed = 45,
    CustomMouseDragRotate = 46,
    CustomOrbital = 47,
    InvisCam = "Invisicam"
}
--                                   /{Functions}/\
function Hitbox()
pcall(function()
while getgenv().HitboxExtender == true do wait()
local enemiesFolder = workspace:FindFirstChild("Enemies")
local descendants = enemiesFolder:GetDescendants()
for _, descendant in ipairs(descendants) do
    if descendant:IsA("BasePart") and descendant.Name == getgenv().SelectBodyPart then
        
getgenv().SetHitboxSize = getgenv().SetHitboxSize or 15
getgenv().SetHitboxTrans = getgenv().SetHitboxTrans or 0.9
        descendant.Size = Vector3.new(getgenv().SetHitboxSize,getgenv().SetHitboxSize,getgenv().SetHitboxSize) -- modify as desired
        descendant.Transparency = getgenv().SetHitboxTrans
        descendant.CanCollide = false
       descendant.Material = Enum.Material.ForceField
       descendant.BrickColor = BrickColor.new("Bright red")
    end
end


--Checker
if getgenv().HitboxExtender == false then
local enemiesFolder = workspace:FindFirstChild("Enemies")
local descendants = enemiesFolder:GetDescendants()
    for _, descendant in ipairs(descendants) do
if descendant:IsA("BasePart") and descendant.Name == getgenv().SelectBodyPart then
descendant.Size = Vector3.new(2, 2, 1)
descendant.Transparency = 1
descendant.CanCollide = false
descendant.Material = Enum.Material.SmoothPlastic
descendant.BrickColor = BrickColor.new("White")
end
end

end
end
end)
end

function EquipWeapon()
local args = {
    [1] = getgenv().SelectWeapon
}

for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
    local playerGui = player:WaitForChild("PlayerGui"):WaitForChild("Main")
    local shopFrame = playerGui:WaitForChild("ShopFrame"):WaitForChild("Shop")
    local shopHandler = shopFrame:WaitForChild("ShopHandler")
    local equip = shopHandler:WaitForChild("Equip")
    equip:FireServer(unpack(args))
end
end


function NoCooldown()
getgenv().SetCooldown = getgenv().SetCooldown or 20
game.Players.LocalPlayer.Backpack.EpicKatana.Stats.AbilityCooldown.Value = getgenv().SetCooldown
end

function PutItOnInventory()
if getgenv().SelectWeapon == "Firebrand" then
game.Players.LocalPlayer.ItemOwned.Firebrand.Value = true
elseif getgenv().SelectWeapon == "WindForce" then
game.Players.LocalPlayer.ItemOwned.WindForce.Value = true
elseif getgenv().SelectWeapon == "IceDagger" then
game.Players.LocalPlayer.ItemOwned("IceDagger").Value = true
elseif getgenv().SelectWeapon == "Ghostwalker" then
game.Players.LocalPlayer.ItemOwned.Ghostwalker.Value = true
elseif getgenv().SelectWeapon == "Darkheart" then
game.Players.LocalPlayer.ItemOwned.Darkheart.Value = true
elseif getgenv().SelectWeapon == "Illumina" then
game.Players.LocalPlayer.ItemOwned.Illumina.Value = true
elseif getgenv().SelectWeapon == "Katana" then
game.Players.LocalPlayer.ItemOwned.Katana.Value = true
elseif getgenv().SelectWeapon == "CrimsonKatana" then
game.Players.LocalPlayer.ItemOwned.CrimsonKatana.Value = true
elseif getgenv().SelectWeapon == "OcherousKatana" then
game.Players.LocalPlayer.ItemOwned.OcherousKatana.Value = true
elseif getgenv().SelectWeapon == "GoldKatana" then
game.Players.LocalPlayer.ItemOwned.GoldKatana.Value = true
elseif getgenv().SelectWeapon == "JadeKatana" then
game.Players.LocalPlayer.ItemOwned.JadeKatana.Value = true
elseif getgenv().SelectWeapon == "BlueKatana" then
game.Players.LocalPlayer.ItemOwned.BlueKatana.Value = true
elseif getgenv().SelectWeapon == "IrisKatana" then
game.Players.LocalPlayer.ItemOwned.IrisKatana.Value = true
elseif getgenv().SelectWeapon == "EpicKatana" then
game.Players.LocalPlayer.ItemOwned.EpicKatana.Value = true
elseif getgenv().SelectWeapon == "NorthPole" then
game.Players.LocalPlayer.ItemOwned.NorthPole.Value = true
elseif getgenv().SelectWeapon == "1xCrown" then
game.Players.LocalPlayer.ItemOwned:FindFirstChild("1xCrown").Value = true
elseif getgenv().SelectWeapon == "BlackIronKatana" then
game.Players.LocalPlayer.ItemOwned.BlackIronKatana.Value = true
elseif getgenv().SelectWeapon == "CashStack" then
game.Players.LocalPlayer.ItemOwned.CashStack.Value = true
elseif getgenv().SelectWeapon == "Venomshank" then
game.Players.LocalPlayer.ItemOwned.Venomshank.Value = true
end
end 

function VoteRight()
getgenv().SetVotesClicks = getgenv().SetVotesClicks or 1
    local amount = getgenv().SetVotesClicks
    local mapName = game:GetService("ReplicatedStorage").Voting.Map3.Value
    if getgenv().UnfairVote == "Add" then
        for i=1, amount do
            local args = {[1] = 1}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("AddVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Add ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 1)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    elseif getgenv().UnfairVote == "Remove" then
        for i=1, amount do
            local args = {[1] = 1}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("RemoveVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Remove ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 1)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    end
end

function Middle()
    getgenv().SetVotesClicks = getgenv().SetVotesClicks or 1
    local amount = getgenv().SetVotesClicks
    local mapName = game:GetService("ReplicatedStorage").Voting.Map3.Value
    if getgenv().UnfairVote == "Add" then
        for i=1, amount do
            local args = {[1] = 2}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("AddVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Add ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 2)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    elseif getgenv().UnfairVote == "Remove" then
        for i=1, amount do
            local args = {[1] = 2}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("RemoveVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Remove ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 2)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    end
end

function VoteLeft()
    getgenv().SetVotesClicks = getgenv().SetVotesClicks or 1
    local amount = getgenv().SetVotesClicks
    local mapName = game:GetService("ReplicatedStorage").Voting.Map3.Value
    if getgenv().UnfairVote == "Add" then
        for i=1, amount do
            local args = {[1] = 3}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("AddVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Add ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 3)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    elseif getgenv().UnfairVote == "Remove" then
        for i=1, amount do
            local args = {[1] = 3}
            game:GetService("ReplicatedStorage"):WaitForChild("Voting"):WaitForChild("RemoveVote"):FireServer(unpack(args))
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notify";
            Text = "Successfully Remove ".. amount .. " Votes On "   .. mapName .. " Map! (Vote 3)";
            Icon = "rbxassetid://7733964719";
            Duration = 3;
        })
    end
end



function walkspeed()
getgenv().SetWalkspeed = getgenv().SetWalkspeed or 16
          while getgenv().Walkspeed do wait()
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().SetWalkspeed
if getgenv().Walkspeed == false then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end
end
end

function SayHenryLine()
-- Select a random item from the table
local randomIndex = math.random(1, #HenryLine)
local RandomWord = HenryLine[randomIndex]
local args = {
    [1] = RandomWord,
    [2] = "All"
}

game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(unpack(args))
end



function Mobilebutton()
local Toggle = Instance.new("ScreenGui")
local UIToggle = Instance.new("TextButton")
Toggle.Name = "Orion Hider"
Toggle.Parent = game.CoreGui.Orion

UIToggle.Name = "Toggler"
UIToggle.Parent = Toggle
UIToggle.BackgroundColor3 = Color3.fromRGB(0,8,8)
UIToggle.BackgroundTransparency = 0.660
UIToggle.Position = UDim2.new(0,890,0 ,0.6)
UIToggle.Size = UDim2.new(0,50 ,0 ,50)
UIToggle.Font = Enum.Font.Code
UIToggle.Text = "Hide/Unhide"
UIToggle.TextColor3 = Color3.fromRGB(255,255,255)
UIToggle.TextSize = 8
UIToggle.Selectable = false
UIToggle.TextScaled = true
UIToggle.TextXAlignment = Enum.TextXAlignment.Left
UIToggle.MouseButton1Click:connect(function()
if game.CoreGui.Orion.Enabled == true then
game.CoreGui.Orion.Enabled = false
elseif game.CoreGui.Orion.Enabled == false then
game.CoreGui.Orion.Enabled = true
end
end)
end

--             /{ Hide/Unhide Button (Mobile Only) }\
if game.CoreGui.RobloxGui.FluxusAndroidUI then
Mobilebutton()
elseif game.CoreGui.HydrogenGui then
Mobilebutton()
end


--                                        /{Tabs}/\
local Tb = Window:MakeTab({
	Name = "Home", --The name of the tab.
	Icon = "rbxassetid://7733960981", -- The icon of the tab.
	PremiumOnly = false --Makes the tab accessible to Sirus Premium users only.
})
local Tab = Window:MakeTab({
	Name = "Main", --The name of the tab.
	Icon = "rbxassetid://7733752575", -- The icon of the tab.
	PremiumOnly = false --Makes the tab accessible to Sirus Premium users only.
})
local Tab1 = Window:MakeTab({
	Name = "Misc", --The name of the tab.
	Icon = "rbxassetid://7734021469", -- The icon of the tab.
	PremiumOnly = false --Makes the tab accessible to Sirus Premium users only.
})
local Tab2 = Window:MakeTab({
	Name = "Credit", --The name of the tab.
	Icon = "rbxassetid://7743875962", -- The icon of the tab.
	PremiumOnly = false --Makes the tab accessible to Sirus Premium users only.
})
--                                           /{Home}/\
local Section = Tb:AddSection({
	Name = "Home Section" -- The name of the section.
})
Tb:AddLabel("Welcome , "..game.Players.LocalPlayer.DisplayName)
--                                        /{Interface}/\
local Section = Tab:AddSection({
	Name = "Hitbox Extender Section" -- The name of the section.
})
Tab:AddDropdown({
	Name = "Select BodyPart", -- The name of the dropdown.
	Default = BodyPart[1], -- The default value of the dropdown.
	Options = BodyPart, -- The options in the dropdown.
	Callback = function(Value) -- The function of the dropdown.
		getgenv().SelectBodyPart = Value
	end    
})
Tab:AddToggle({
	Name = "Enable Hitbox Extender",
	Default = false,
	Callback = function(Value)
getgenv().HitboxExtender = Value
		Hitbox()
	end    
})
Tab:AddTextbox({
	Name = "Change Size of Hitbox",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		getgenv().SetHitboxSize = Value
	end	  
})
Tab:AddTextbox({
	Name = "Set Transparency of Hitbox",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		getgenv().SetHitboxTrans = Value
	end	  
})
local Section = Tab:AddSection({
	Name = "Crazy Power Section" -- The name of the section.
})
Tab:AddParagraph("How to use :","Click the button and go to the enemies [Fe]")
Tab:AddParagraph("How to use 2 :","use a hitbox expander to check if enemies are doing anything unusual, such as shifting erratically or behaving strangely. Then, click the buttons.")
Tab:AddButton({
	Name = "Instantly Kill Nearest Enemies [Unstable/Buggy]",
	Callback = function()
      		local enemiesFolder = workspace:FindFirstChild("Enemies")
local descendants = enemiesFolder:GetDescendants()
for _, descendant in ipairs(descendants) do
    if descendant:IsA("Humanoid") then
        descendant.Health = 0 -- Set the humanoid's walkspeed to 50
    end
end
  	end    
})
 local EspSection = Tab:AddSection({
    Name = "Esp Section"
})

EspEnabler = false
SelectWhoEsp = " "

Tab:AddDropdown({
    Name = "Select WhoTo",
    Default = " ",
    Options = {"Enemies {Buggy}", "Players", "Both"},
    Callback = function(Value)
        SelectWhoEsp = Value
    end    
})

local function createEsp(highlightColor, adornee)
    local Esp = Instance.new("Highlight")
    Esp.Parent = game.CoreGui.EspHolder
    Esp.FillColor = highlightColor
    Esp.FillTransparency = 0.87
    Esp.OutlineColor = highlightColor
    Esp.OutlineTransparency = 0.8
    Esp.Adornee = adornee
    Esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    return Esp
end

Tab:AddToggle({
    Name = "Enable Esp",
    Default = false,
    Callback = function(Value)
        EspEnabler = Value
        if EspEnabler then
            local success,Holder = pcall(function()
                local Folder = game.CoreGui:FindFirstChild("EspHolder")
                if not Folder then
                    Folder = Instance.new("Folder")
                    Folder.Name = "EspHolder"
                    Folder.Parent = game.CoreGui
                end
                return Folder
            end)
            
            if not success then
                warn("Error creating EspHolder: ", Holder)
            else
                while EspEnabler do
                    if SelectWhoEsp == "Enemies {Buggy}" then
                        for _, chr in pairs(game.Workspace.Enemies:GetDescendants()) do
                            if chr:IsA("Model") and chr:FindFirstChild("EnemyHumanoid") then
                                local Esp = Holder:FindFirstChild(chr.Name) or createEsp(Color3.new(1,0,0), chr)
                                Esp.Name = chr.Name
                            end
                        end
                    elseif SelectWhoEsp == "Players" then
                        for _,v in pairs(game.Players:GetChildren()) do
                            local chr = v.Character
                            if chr ~= nil then
                                local Esp = Holder:FindFirstChild(v.Name) or createEsp(Color3.new(1,1,1), chr)
                                Esp.Name = v.Name
                            end
                        end
                    elseif SelectWhoEsp == "Both" then
                        for _,v in pairs(game.Players:GetChildren()) do
                            local chr = v.Character
                            if chr ~= nil then
                                local Esp = Holder:FindFirstChild(v.Name) or createEsp(Color3.new(1,1,1), chr)
                                Esp.Name = v.Name
                            end
                        end
                        for _, chr in pairs(game.Workspace.Enemies:GetDescendants()) do
                            if chr:IsA("Model") and chr:FindFirstChild("EnemyHumanoid") then
                                local Esp = Holder:FindFirstChild(chr.Name) or createEsp(Color3.new(1,0,0), chr)
                                Esp.Name = chr.Name
                            end
                        end
                    end
                    task.wait()
                end
            end
        else
            -- Remove existing highlights
            local success,Holder = pcall(function()
                return game.CoreGui:FindFirstChild("EspHolder")
            end)
            
            if not success then
                warn("Error finding EspHolder: ", Holder)
            elseif Holder then
                for _, Esp in pairs(Holder:GetChildren()) do
                    Esp:Destroy()
                end
            end
        end
    end
})














local Section = Tab:AddSection({
	Name = "Weapon Section [Fe]" -- The name of the section.
})
local SelectedWeapon = Tab:AddDropdown({
	Name = "Select weapon", -- The name of the dropdown.
	Default = " ", -- The default value of the dropdown.
	Options = WeaponsNameV2, -- The options in the dropdown.
	Callback = function(Value) -- The function of the dropdown.
		getgenv().SelectWeapon = Value
	end    
})
Tab:AddButton({
	Name = "Equip", -- The name of the button.
	Callback = function() --The function of the button.
      EquipWeapon()
  	end    
})
Tab:AddButton({
	Name = "Add the weapon to the inventory", -- The name of the button.
	Callback = function() --The function of the button.
      PutItOnInventory()
  	end    
})
Tab:AddButton({
	Name = "Put all weapons in inventory", -- The name of the button.
	Callback = function() --The function of the button.
      for i,v in pairs(game.Players.LocalPlayer.ItemOwned:GetDescendants()) do 
if v:IsA("BoolValue") then 
v.Value = true
end 
end
  	end    
})
local Section = Tab:AddSection({
	Name = "Unfair Votes Sections [Fe]" -- The name of the section.
})
Tab:AddDropdown({
	Name = "Select Mode", -- The name of the dropdown.
	Default = " ", -- The default value of the dropdown.
	Options = Vote, -- The options in the dropdown.
	Callback = function(Value) -- The function of the dropdown.
		getgenv().UnfairVote = Value
	end    
})
Tab:AddTextbox({
	Name = "How Much Votes In One Clicks",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		getgenv().SetVotesClicks = Value
	end	  
})
Tab:AddButton({
	Name = "Vote Right", -- The name of the button.
	Callback = function() --The function of the button.
      VoteRight()
  	end    
})
Tab:AddButton({
	Name = "Vote Middle", -- The name of the button.
	Callback = function() --The function of the button.
      VoteMiddle()
  	end    
})
Tab:AddButton({
	Name = "Vote Left", -- The name of the button.
	Callback = function() --The function of the button.
      VoteLeft()
  	end    
})
local Section = Tab:AddSection({
	Name = "Modified Cooldown Time for Ability Section [Fe]" -- The name of the section.
})
local CooldownChecker = Tab:AddLabel("Current Cooldown Value : 20")
Tab:AddTextbox({
	Name = "Set the cooldown for the ability",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		getgenv().SetCooldown = Value
	end	  
})
Tab:AddButton({
	Name = "Set the cooldown timer", -- The name of the button.
	Callback = function() --The function of the button.
      NoCooldown()
  	end    
})
Tab:AddButton({
	Name = "Force the cooldown to be set to 0", -- The name of the button.
	Callback = function() --The function of the button.
      game.Players.LocalPlayer.Backpack.EpicKatana.Cooldown.Value = 0
  	end    
})














--                                        { Tabs 2 }
local Section = Tab1:AddSection({
	Name = "Walkspeed Section" -- The name of the section.
})
Tab1:AddTextbox({
	Name = "Set Player Walkspeed",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		getgenv().SetWalkspeed = Value
	end	  
})
Tab1:AddToggle({
    Name = "Set the walkspeed value (works for no slowdown).",
    Default = false,
    Callback = function(Value)
    getgenv().Walkspeed = Value
        pcall(function()
            walkspeed()
        end)
    end
})

local Section = Tab1:AddSection({
	Name = "Teleport to Player Section" -- The name of the section.
})
-- Get a reference to the client player
local player = game.Players.LocalPlayer

-- Define the options table
local options = {}
-- Define a function to repopulate the options table

-- Define the SelectPlayer dropdown
local SelectPlayer = Tab1:AddDropdown({
    Name = "Select Player",
    Default = "",
    Options = options,
    Callback = function(Value)
        getgenv().SelectedPlayer = Value
    end
})
--
local function repopulateOptions()
    local newOptions = {}
    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            table.insert(newOptions, otherPlayer.Name)
        end
    end
    options = newOptions
    SelectPlayer:Refresh(options, true)
    getgenv().SelectedPlayer = ""
end
-- Define the Refresh button
local refreshButton = Tab1:AddButton({
    Name = "Refresh Select Player Dropdown",
    Callback = function()
        repopulateOptions()
        getgenv().SelectedPlayer = ""
    end
})
-- Define the Teleport button
local teleportButton = Tab1:AddButton({
    Name = "Teleport To selected Player",
    Callback = function()
    
        local selectedPlayer = game.Players:FindFirstChild(getgenv().SelectedPlayer)
        if selectedPlayer ~= nil and selectedPlayer.Character ~= nil and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = selectedPlayer.Character:WaitForChild("HumanoidRootPart")
            game.Players.LocalPlayer.Character:MoveTo(rootPart.Position)
        end
    end
})
local Section = Tab1:AddSection({
	Name = "Camera Section" -- The name of the section.
})


local cameraNames = {}
for name, value in pairs(cameraModes) do
    table.insert(cameraNames, name)
end

-- Define the Select camera dropdown
local SelectCamera = Tab1:AddDropdown({
    Name = "Select camera",
    Default = cameraNames[1],
    Options = cameraNames,
    Callback = function(Value)
        getgenv().Selectcamera = Value
    end
})

Tab1:AddButton({
    Name = "Set the camera mode", -- The name of the button.
    Callback = function() -- The function of the button.
        local selectedCameraMode = getgenv().Selectcamera
        if selectedCameraMode ~= nil then
            workspace.CurrentCamera.CameraType = Enum.CameraType[selectedCameraMode]
            elseif getgenv().Selectcamera == "Invisicam" then
game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Invisicam"
        end
    end
})

Tab1:AddButton({
    Name = "Fix cam", -- The name of the button.
    Callback = function() -- The function of the button.
        local selectedCameraMode = getgenv().Selectcamera
if selectedCameraMode ~= nil then
    local previousCamera = workspace.CurrentCamera
    local newCamera = Instance.new("Camera")
    newCamera.CameraType = Enum.CameraType[selectedCameraMode]
    newCamera.CFrame = previousCamera.CFrame -- Set the position of the new camera
    workspace.CurrentCamera = newCamera
end
    end
})
Tab1:AddButton({
    Name = "Goto cam", -- The name of the button.
    Callback = function() -- The function of the button.
        local player = game:GetService("Players").LocalPlayer
local character = player.Character

if character then
    local camera = workspace.CurrentCamera
    local cameraCFrame = camera.CFrame
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:MoveTo(cameraCFrame.p)
    end
end

    end
})
local Section = Tab1:AddSection({
	Name = "Server Section" -- The name of the section.
})
Tab1:AddButton({
	Name = "Serverhop", -- The name of the button.
	Callback = function() --The function of the button.
		local function callback(Text)
		    if Text == "Yes" then
		        game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
		        game.StarterGui:SetCore("SendNotification", {
		            Title = "Notification";
		            Text = "Searching A Server. . . Please Wait.";
		            Icon = "rbxassetid://7734052925";
		            Duration = 5;
		        })
		        wait()
		        local x = {}
		        for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
		            if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
		                x[#x + 1] = v.id
		            end
		        end
		        if #x > 0 then
		            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
		        end
		    elseif Text == "Nah" then
		        game.StarterGui:SetCore("SendNotification", {
		            Title = "Notification";
		            Text = "ServerHop Action Failed.";
		            Icon = "rbxassetid://7743878496";
		            Duration = 5;
		        })
		    end
		end

		local NotificationBindable = Instance.new("BindableFunction")
		NotificationBindable.OnInvoke = callback

		game.StarterGui:SetCore("SendNotification", {
		    Title = "Notification";
		    Text = "You sure you want to Leave from the server And Go to another random server?";
		    Icon = "rbxassetid://7733658271";
		    Duration = 5;
		    Button1 = "Yes";
		    Button2 = "Nah";
		    Callback = NotificationBindable;
		})
	end
})

Tab1:AddButton({
    Name = "Rejoin",
    Callback = function()
        local function callback(Text)
            if Text == "Yes" then
                game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Notification";
                    Text = "Rejoining. . . Please Wait.";
                    Icon = "rbxassetid://7733964719";
                    Duration = 5;
                })
            elseif Text == "Nah" then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Notification";
                    Text = "Rejoin Action Failed.";
                    Icon = "rbxassetid://7743878496";
                    Duration = 5;
                })
            end
        end

        local NotificationBindable = Instance.new("BindableFunction")
        NotificationBindable.OnInvoke = callback

        game.StarterGui:SetCore("SendNotification", {
            Title = "Notification";
            Text = "You sure you want to rejoin from the server?";
            Icon = "rbxassetid://7733658271";
            Duration = 5;
            Button1 = "Yes";
            Button2 = "Nah";
            Callback = NotificationBindable;
        })
    end -- add this closing curly brace
})

local Section = Tab1:AddSection({
	Name = "Fly Section" -- The name of the section.
})


local tpwalking

Tab1:AddToggle({
    Name = "Enable Fly",
    Default = false,
    Callback = function(Value)
    nowe = Value
if nowe == false then
            tpwalking = false
            speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	elseif nowe == true then
		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	
				
				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end
	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 9
		local speed = 9


		local bg = Instance.new("BodyGyro", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new("BodyVelocity", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 9
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 9
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false




	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 9
		local speed = 9


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 9
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 9
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false

    print(speed)
end
end
})




local Section = Tab1:AddSection({
	Name = "Misc Section" -- The name of the section.
})
Tab1:AddToggle({
    Name = "Say Henry line",
    Default = false,
    Callback = function(Value)
    getgenv().Henry = Value
        while getgenv().Henry do wait(18)
          SayHenryLine()
          end
end
})
Tab1:AddButton({
	Name = "Enable/Disable Cutscene", -- The name of the button.
	Callback = function() --The function of the button.
	if game.ReplicatedStorage.Game.Cutscene.Value == true then
      game.ReplicatedStorage.Game.Cutscene.Value = false
elseif game.ReplicatedStorage.Game.Cutscene.Value == false then
game.ReplicatedStorage.Game.Cutscene.Value = true
  	end    
  end
})


-- Credit
Tab2:AddParagraph("Credit🤢","• average funny guy#0855")
Tab2:AddParagraph("Cool Facts😎","• I made this script on Mobile and also i like to cu-")

while true do
  local success, cooldownValue = pcall(function()
    return game.Players.LocalPlayer.Backpack.EpicKatana.Stats.AbilityCooldown.Value
  end)

  if success then
    CooldownChecker:Set("Current Cooldown Value : " .. cooldownValue)
  end

  wait(0.5) -- wait for 0.5 seconds before checking the cooldown value again
end
wait(0.5)
repopulateOptions()
GarbageHub:Init()
